#!/bin/bash

pushd "`dirname $0`" > /dev/null
pushd "`git rev-parse --show-toplevel`" > /dev/null


USAGE="Syntax: $0 [-a|--after-break AFTER_BREAK_TEXT] [-b|--before-break BEFORE_BREAK_TEXT] [-d|--date DATE] [-t|--title TITLE] SLUG_TITLE

This tool will create a new Notes page with the format YYMMDD-SLUG_TITLE.
Other arguments are optional.  If DATE is not specified, it will be set to
today.  If the other arguments are not specified, they will be left as their
respective template values."


D_NOTES="src/content/notes"
T_NOTES="resources/starters/note"
T_PAGE="$T_NOTES/page.json"
T_BODY="$T_NOTES/body.md"

while [ $# -gt 0 ]; do
    case $1 in
        -h|--help)
            echo "$USAGE"
            exit 0
            ;;
        -a|--after-break)
            AFTER_BREAK="$2"
            shift 2
            ;;
        -b|--before-break)
            BEFORE_BREAK="$2"
            shift 2
            ;;
        -d|--date)
            DATE="$2"
            shift 2
            ;;
        -t|--title)
            TITLE="$2"
            shift 2
            ;;
        *)
            if [[ "$PAGE_NAME" == "" ]]; then
                PAGE_NAME="$1"
                shift 1
            else
                echo "Syntax error" > /dev/stderr
                echo "$USAGE" > /dev/stderr
                exit 1
            fi
            ;;
    esac
done

if [[ "$PAGE_NAME" == "" ]]; then
    echo "Syntax error" > /dev/stderr
    echo "$USAGE" > /dev/stderr
    exit 1
fi

if [[ "$DATE" == "" ]]; then
    DATE=`date '+%y%m%d'`
fi

PAGE=`cat "$T_PAGE"`
BODY=`cat "$T_BODY"`

if [[ "$TITLE" != "" ]]; then
    PAGE=`echo "$PAGE" | sed "s/__title__/$TITLE/g"`
fi

if [[ "$AFTER_BREAK" != "" ]]; then
    BODY=`echo "$BODY" | sed "s/__after_break__/$AFTER_BREAK/g"`
fi

if [[ "$BEFORE_BREAK" != "" ]]; then
    BODY=`echo "$BODY" | sed "s/__before_break__/$BEFORE_BREAK/g"`
fi

NOTE="$D_NOTES/$DATE-$PAGE_NAME"
mkdir -p "$NOTE"
echo "$PAGE" > $NOTE/page.json
echo "$BODY" > $NOTE/body.md
